{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/Feedback/Feedback.js","App/App.js","index.js"],"names":["PropTypes","Statistics","good","number","isRequired","neutral","bad","total","positivePercentage","FeedbackOptions","onClickFeedbackChange","func","name","onClick","Section","title","string","Notification","messege","Feedback","App","state","positivePercent","goodPercent","Math","round","filterTodo","toLowerCaseFilter","filter","toLowerCase","todos","todo","plan","includes","e","target","setState","prevState","this","procent","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAcAA,IAAUC,WAAa,CACrBC,KAAMF,IAAUG,OAAOC,WACvBC,QAASL,IAAUG,OAAOC,WAC1BE,IAAKN,IAAUG,OAAOC,WACtBG,MAAOP,IAAUG,OAAOC,WACxBI,mBAAoBR,IAAUG,OAAOC,YAExBH,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMG,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OAEM,+BACE,uCAAUN,KACV,0CAAaG,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCUVR,IAAUS,gBAAkB,CAC1BC,sBAAuBV,IAAUW,KAAKP,YAEzBK,MArBf,YAAqD,IAA1BC,EAAyB,EAAzBA,sBACzB,OAGM,gCACE,wBAAQE,KAAK,OAAOC,QAASH,EAA7B,kBAGA,wBAAQE,KAAK,UAAWC,QAASH,EAAjC,qBAGA,wBAAQE,KAAK,MAAOC,QAASH,EAA7B,qBCLVV,IAAUc,QAAU,CAClBC,MAAOf,IAAUgB,OAAOZ,YAEXU,MATf,YAA6B,IAAVC,EAAS,EAATA,MACjB,OACE,6BAAKA,KCFM,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,+BAAQA,ICGG,SAASC,EAAT,GAAyF,IAArEjB,EAAoE,EAApEA,KAAKG,EAA+D,EAA/DA,QAAQC,EAAuD,EAAvDA,IAAKC,EAAkD,EAAlDA,MAAMC,EAA4C,EAA5CA,mBAAoBE,EAAwB,EAAxBA,sBAE3E,OACE,gCACE,cAAC,EAAD,CAASK,MAAM,0BACb,cAAC,EAAD,CAAiBL,sBAAuBA,IAE1C,cAAC,EAAD,CAASK,MAAM,eAEJ,IAAVR,EACC,cAACU,EAAD,CAAcC,QAAQ,yBAEtB,cAAC,EAAD,CAAYhB,KAAMA,EAAMG,QAASA,EAASC,IAAKA,EAAKC,MAAOA,EAAOC,mBAAoBA,ODZhGR,IAAUiB,aAAe,CACvBC,QAASlB,IAAUgB,OAAOZ,YCkB5BJ,IAAUmB,SAAW,CACnBjB,KAAMF,IAAUG,OAAOC,WACvBC,QAASL,IAAUG,OAAOC,WAC1BE,IAAKN,IAAUG,OAAOC,WACtBG,MAAOP,IAAUG,OAAOC,WACxBI,mBAAoBR,IAAUG,OAAOC,WACrCM,sBAAuBV,IAAUW,KAAKP,Y,ICxBlCgB,E,4MACJC,MAAQ,CAONnB,KAAM,EACNG,QAAS,EACTC,IAAK,EACLC,MAAO,G,EAITe,gBAAkB,WAChB,MAAsB,EAAKD,MAApBd,EAAP,EAAOA,MACDgB,EADN,EAAcrB,KACWK,EAAQ,IAC/B,OAAOiB,KAAKC,MAAMF,I,EAqBtBG,WAAa,WACX,IAAMC,EAAoB,EAAKN,MAAMO,OAAOC,cAE5C,OAAO,EAAKR,MAAMS,MAAMF,QAAO,SAACG,GAAD,OAAYA,EAAKC,KAAKH,cAAcI,SAASN,O,EAEhFjB,sBAAwB,SAACwB,GACvB,IAAMtB,EAAOsB,EAAEC,OAAOvB,KACtB,EAAKwB,UAAS,SAAAC,GAAc,IAAD,EACzB,OAAO,EAAP,iBAEGzB,EAAOyB,EAAUzB,GAAQ,GAF5B,sBAGSyB,EAAU9B,MAAQ,GAH3B,M,4CAQF,WACE,MAAsC+B,KAAKjB,MAAnCnB,EAAR,EAAQA,KAAMG,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MACtBgC,EAAUD,KAAKhB,kBAErB,OACE,8BACE,cAACH,EAAD,CAAUjB,KAAMA,EAAMG,QAASA,EAASC,IAAKA,EAAKC,MAAOA,EAAOC,mBAAoB+B,EAAS7B,sBAAwB4B,KAAK5B,8B,GA7DhH8B,aA6EHpB,IC9EfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.c32b4e54.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    \n        <ul>\n          <li>Good:{good }</li>\n          <li>Neutral:{neutral}</li>\n          <li>Bad:{bad}</li>\n          <li>Total:{total}</li>\n          <li>Positive Feedback:{positivePercentage}%</li>\n        </ul>\n    \n  )\n}\nPropTypes.Statistics = {\n  good: PropTypes.number.isRequired, \n  neutral: PropTypes.number.isRequired, \n  bad: PropTypes.number.isRequired, \n  total: PropTypes.number.isRequired, \n  positivePercentage: PropTypes.number.isRequired,\n}\nexport default Statistics;","import PropTypes from 'prop-types'\nfunction FeedbackOptions({ onClickFeedbackChange }) {\n  return (\n    \n      \n        <div>\n          <button name=\"good\" onClick={onClickFeedbackChange}>\n          Good\n          </button>\n          <button name=\"neutral\"  onClick={onClickFeedbackChange}>\n            Neutral\n          </button>\n          <button name=\"bad\"  onClick={onClickFeedbackChange}>\n            Bad\n          </button>\n        </div>\n    \n  )\n}\nPropTypes.FeedbackOptions = {\n  onClickFeedbackChange: PropTypes.func.isRequired,\n}\nexport default FeedbackOptions","import PropTypes from 'prop-types'\nfunction Section({ title }) {\n  return (\n    <h2>{title}</h2>\n  )\n}\n\nPropTypes.Section = {\n  title: PropTypes.string.isRequired,\n}\nexport default Section","import PropTypes from 'prop-types'\nexport default function Notification({ messege }) {\n  return (\n    <span>{ messege}</span>\n  )\n}\nPropTypes.Notification = {\n  messege: PropTypes.string.isRequired,\n}","\nimport Statistics from '../Statistics'\nimport FeedbackOptions from '../FeedbackOptions'\nimport Section from '../Section'\nimport Notification from '../Notification'\nimport PropTypes from 'prop-types';\nexport default function Feedback ({good,neutral,bad, total,positivePercentage, onClickFeedbackChange}) {\n \n    return (\n      <div>\n        <Section title='Please leave feedback'/>\n          <FeedbackOptions onClickFeedbackChange={onClickFeedbackChange} />\n        {/* </Section> */}\n        <Section title='Statistics' />\n\n        {total === 0 ?\n          <Notification messege='There is no feedback'/>\n          :\n          <Statistics good={good} neutral={neutral} bad={bad} total={total} positivePercentage={positivePercentage} />}\n          \n        {/* </Section> */}\n      </div>\n    )\n  }\n\nPropTypes.Feedback = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired, \n  onClickFeedbackChange: PropTypes.func.isRequired,\n}","import { Component } from \"react/cjs/react.production.min\";\n// import Todo from '../components/Todo'\n// import Input from '../components/Input'\nimport shortid from \"shortid\";\n// import Checkbox from '../components/Checkbox'\n// import Filter from '../components/Filter'\nimport Feedback from \"../components/Feedback\";\nclass App extends Component {\n  state = {\n    // todos: [\n    //   { id: 'id-1', plan: 'выучить React', completed: false },\n    //   { id: 'id-2', plan: 'осознать React ', completed: true },\n    //   { id: 'id-3', plan: 'обуздать Redux', completed: true }\n    // ],\n    // filter: '',\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n  }\n  \n\n  positivePercent = () => {\n    const {total, good} = this.state\n    const goodPercent = good/total * 100\n      return Math.round(goodPercent)\n    }\n  \n  // addTodo = messege => {\n  //   const randId = shortid.generate()\n  //   const newTodo = {\n  //     id: randId,\n  //     plan: messege,\n  //     completed: false\n  //   }\n  //   this.setState(prevState => ({todos: [ ...prevState.todos, newTodo]}))\n  // }\n  // deleteTodo = id => this.setState(\n  //   prevState => ({ todos: prevState.todos.filter(todo => todo.id !== id) })\n  // )\n  \n  \n//  filterInputHandler = (e) => {\n//     this.setState({ filter: e.target.value })\n    \n//   }\n  filterTodo = () => {\n    const toLowerCaseFilter = this.state.filter.toLowerCase()\n\n    return this.state.todos.filter((todo)=>    todo.plan.toLowerCase().includes(toLowerCaseFilter))\n  }\nonClickFeedbackChange = (e) => {\n  const name = e.target.name\n  this.setState(prevState => {\n    return {\n        \n      [name]: prevState[name] + 1,\n      total: prevState.total + 1,\n        \n    }\n  })\n}\n  render() {\n    const { good, neutral, bad, total } = this.state\n    const procent = this.positivePercent()\n    // const filteredTodos = this.filterTodo()\n    return (\n      <div>\n        <Feedback good={good} neutral={neutral} bad={bad} total={total} positivePercentage={procent} onClickFeedbackChange={ this.onClickFeedbackChange}/>\n        {/* <h2>Form</h2> */}\n        {/* <Checkbox /> */}\n        {/* <Input onSubmit={this.addTodo} /> */}\n        \n        {/* <Filter filter={this.todosFilter} /> */}\n        {/* <label > */}\n        {/* Filter */}\n        {/* <input type=\"text\" onChange={this.filterInputHandler} /> */}\n      {/* </label > */}\n        {/* <Todo todos={filteredTodos} onDelete={this.deleteTodo}/> */}\n      </div>\n    )\n  \n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}